using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;

namespace JogoDaMemoria
{
    public partial class Form1 : Form
    {
        private List<Button> buttons;
        private List<Image> images;
        private Button firstButton, secondButton;
        private int pairsFound;
        private bool isChecking;
        private FormInicio formInicio;
        private TableLayoutPanel tableLayoutPanel1;

        public Form1(FormInicio mainMenu)
        {
            formInicio = mainMenu;
            InitializeComponent();
            this.BackColor = Color.FromArgb(123, 133, 218);
            InitializeGame();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            WindowState = FormWindowState.Maximized;
            FormBorderStyle = FormBorderStyle.None;
        }

        private void InitializeGame()
        {
            buttons = new List<Button>();
            images = new List<Image>();

            // Carregar imagens
            for (int i = 1; i <= 10; i++)
            {
                try
                {
                    images.Add(Image.FromFile($"C:/Users/gabri/source/repos/JogoDaMemoriaOng/JogoDaMemoriaOng/animals/animals{i}.png"));
                }
                catch (Exception ex)
                {
                    MessageBox.Show($"Erro ao carregar imagem {i}: {ex.Message}");
                }
            }

            images.AddRange(images.ToList());
            images = images.OrderBy(x => Guid.NewGuid()).ToList();

            // Criar TableLayoutPanel
            tableLayoutPanel1 = new TableLayoutPanel
            {
                ColumnCount = 5,
                RowCount = 4,
                Dock = DockStyle.Fill
            };

            // Adicionar estilos de coluna e linha
            for (int i = 0; i < tableLayoutPanel1.ColumnCount; i++)
            {
                tableLayoutPanel1.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 20F)); // 5 colunas de igual tamanho
            }
            for (int j = 0; j < tableLayoutPanel1.RowCount; j++)
            {
                tableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Percent, 25F)); // 4 linhas de igual tamanho
            }

            Controls.Add(tableLayoutPanel1);

            // Criar botões de jogo
            for (int i = 0; i < 20; i++)
            {
                Button button = new Button
                {
                    BackgroundImageLayout = ImageLayout.Stretch,
                    Tag = images[i],
                    Dock = DockStyle.Fill,
                    Font = new Font("Arial", 17), // Definindo a fonte e o tamanho do texto
                    BackColor = ColorTranslator.FromHtml("#008000"),
                    FlatStyle = FlatStyle.Flat, // Estilo plano
                    FlatAppearance = { BorderSize = 0 } // Remove a borda
                };
                button.Click += Button_Click;
                buttons.Add(button);
                tableLayoutPanel1.Controls.Add(button);
            }

            // Botão para voltar ao menu
            Button btnBackToMenu = new Button
            {
                Text = "Voltar ao Menu",
                Dock = DockStyle.Bottom,
                BackColor = Color.DimGray,
                Height = 60, // Definindo a altura do botão
                Font = new Font("Arial", 17),
                ForeColor = Color.White,
                FlatStyle = FlatStyle.Flat, // Estilo plano
                FlatAppearance = { BorderSize = 0 } // Remove a borda

            };
            btnBackToMenu.Click += BtnBackToMenu_Click;
            Controls.Add(btnBackToMenu);

            // Botão para fechar o jogo
            Button btnCloseGame = new Button
            {

                Text = "Fechar Jogo",
                Dock = DockStyle.Bottom,
                BackColor = Color.DimGray,
                Height = 60, // Definindo a altura do botão
                Font = new Font("Arial", 17),
                ForeColor = Color.PaleVioletRed,
                FlatStyle = FlatStyle.Flat, // Estilo plano
                FlatAppearance = { BorderSize = 0 } // Remove a borda

            };
            btnCloseGame.Click += BtnCloseGame_Click; // Adiciona evento de clique
            Controls.Add(btnCloseGame);
        }

        private void Button_Click(object sender, EventArgs e)
        {
            if (isChecking) return;

            Button clickedButton = sender as Button;
            clickedButton.BackgroundImage = (Image)clickedButton.Tag;
            clickedButton.Enabled = false;

            if (firstButton == null)
            {
                firstButton = clickedButton;
            }
            else
            {
                secondButton = clickedButton;
                isChecking = true;

                if (firstButton.Tag.Equals(secondButton.Tag))
                {
                    pairsFound++;
                    if (pairsFound == 10)
                    {
                        MessageBox.Show("Parabéns! Você encontrou todos os pares!");
                    }
                    ResetSelection();
                }
                else
                {
                    Timer timer = new Timer { Interval = 1000 };
                    timer.Tick += (s, args) =>
                    {
                        firstButton.BackgroundImage = null;
                        secondButton.BackgroundImage = null;
                        firstButton.Enabled = true;
                        secondButton.Enabled = true;

                        ResetSelection();
                        timer.Stop();
                    };
                    timer.Start();
                }
            }
        }

        private void ResetSelection()
        {
            firstButton = null;
            secondButton = null;
            isChecking = false;
        }

        private void BtnBackToMenu_Click(object sender, EventArgs e)
        {
            Hide();
            formInicio.Show();
        }

        private void BtnCloseGame_Click(object sender, EventArgs e)
        {
            Application.Exit(); // Fechar o aplicativo
        }
    }
}
